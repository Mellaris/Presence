// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(RemoteDatabaseContext))]
    [Migration("20241206100803_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.DAO.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("IdStatusId")
                        .HasColumnType("integer");

                    b.Property<int>("IdStudentId")
                        .HasColumnType("integer");

                    b.Property<int>("LessonNumber")
                        .HasColumnType("integer");

                    b.Property<int>("SubjectIdId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdStatusId");

                    b.HasIndex("IdStudentId");

                    b.HasIndex("SubjectIdId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Data.DAO.Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Groupses");
                });

            modelBuilder.Entity("Data.DAO.GroupsAndSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupIdId")
                        .HasColumnType("integer");

                    b.Property<string>("Semestr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubjectIdId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GroupIdId");

                    b.HasIndex("SubjectIdId");

                    b.ToTable("GroupsAndSubjects");
                });

            modelBuilder.Entity("Data.DAO.Statuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NameStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Statuss");
                });

            modelBuilder.Entity("Data.DAO.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Fio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdGroupId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdGroupId");

                    b.ToTable("Studentses");
                });

            modelBuilder.Entity("Data.DAO.Subjects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Subjectses");
                });

            modelBuilder.Entity("Data.DAO.Attendance", b =>
                {
                    b.HasOne("Data.DAO.Statuses", "IdStatus")
                        .WithMany()
                        .HasForeignKey("IdStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DAO.Students", "IdStudent")
                        .WithMany("Presences")
                        .HasForeignKey("IdStudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DAO.Subjects", "SubjectId")
                        .WithMany()
                        .HasForeignKey("SubjectIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdStatus");

                    b.Navigation("IdStudent");

                    b.Navigation("SubjectId");
                });

            modelBuilder.Entity("Data.DAO.GroupsAndSubject", b =>
                {
                    b.HasOne("Data.DAO.Groups", "GroupId")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("GroupIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DAO.Subjects", "SubjectId")
                        .WithMany("GroupsSubject")
                        .HasForeignKey("SubjectIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupId");

                    b.Navigation("SubjectId");
                });

            modelBuilder.Entity("Data.DAO.Students", b =>
                {
                    b.HasOne("Data.DAO.Groups", "IdGroup")
                        .WithMany("Students")
                        .HasForeignKey("IdGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdGroup");
                });

            modelBuilder.Entity("Data.DAO.Groups", b =>
                {
                    b.Navigation("GroupSubjects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Data.DAO.Students", b =>
                {
                    b.Navigation("Presences");
                });

            modelBuilder.Entity("Data.DAO.Subjects", b =>
                {
                    b.Navigation("GroupsSubject");
                });
#pragma warning restore 612, 618
        }
    }
}
